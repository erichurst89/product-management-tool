{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ehurs\\\\OneDrive\\\\Documents\\\\GitHub\\\\product-management-tool\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // Import CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductCreatePage = () => {\n  _s();\n  const [productName, setProductName] = useState('');\n  const [upc, setUpc] = useState('');\n  const [availableOn, setAvailableOn] = useState('');\n  const [properties, setProperties] = useState([{\n    name: '',\n    value: ''\n  }]);\n  const handleAddProperty = () => {\n    setProperties([...properties, {\n      name: '',\n      value: ''\n    }]);\n  };\n  const handlePropertyChange = (index, key, value) => {\n    const updatedProperties = [...properties];\n    updatedProperties[index][key] = value;\n    setProperties(updatedProperties);\n  };\n  const handleSave = async () => {\n    // Prepare data to be sent to the backend\n    const requestData = {\n      productName: productName,\n      upc: upc,\n      availableOn: availableOn,\n      properties: properties\n    };\n    try {\n      const response = await fetch('http://localhost:3001/insert-data', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestData)\n      });\n      if (response.ok) {\n        console.log('Data saved successfully');\n        // Optionally, you can reset the form fields here\n        setProductName('');\n        setUpc('');\n        setAvailableOn('');\n        setProperties([{\n          name: '',\n          value: ''\n        }]);\n      } else {\n        console.error('Failed to save data');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-create-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product Create Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Product Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: productName,\n      onChange: e => setProductName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"UPC:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: upc,\n      onChange: e => setUpc(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Available On (mm/dd/yyyy):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: availableOn,\n      onChange: e => setAvailableOn(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Properties\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), properties.map((property, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: property.name,\n        onChange: e => handlePropertyChange(index, 'name', e.target.value),\n        placeholder: \"Property Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: property.value,\n        onChange: e => handlePropertyChange(index, 'value', e.target.value),\n        placeholder: \"Property Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddProperty,\n      children: \"Add Property\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductCreatePage, \"NdpyU25pR3Lb1ad6oZCzBM3iIek=\");\n_c = ProductCreatePage;\nexport default ProductCreatePage;\n\n/*import React, { useState } from 'react';\r\nimport './App.css'; // Import CSS file for styling\r\n\r\n\r\n\r\nconst ProductCreatePage = () => {\r\n  const [productName, setProductName] = useState('');\r\n  const [upc, setUpc] = useState('');\r\n  const [availableOn, setAvailableOn] = useState('');\r\n  const [properties, setProperties] = useState([{ name: '', value: '' }]);\r\n\r\n  const handleAddProperty = () => {\r\n    setProperties([...properties, { name: '', value: '' }]);\r\n  };\r\n\r\n  const handlePropertyChange = (index, key, value) => {\r\n    const updatedProperties = [...properties];\r\n    updatedProperties[index][key] = value;\r\n    setProperties(updatedProperties);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    // Implement save logic here, including validations\r\n    console.log('Product name:', productName);\r\n    console.log('UPC:', upc);\r\n    console.log('Available On:', availableOn);\r\n    console.log('Properties:', properties);\r\n  };\r\n\r\n  return (\r\n    <div className=\"product-create-container\">\r\n      <h1>Product Create Page</h1>\r\n      <label>Product Name:</label>\r\n      <input type=\"text\" value={productName} onChange={(e) => setProductName(e.target.value)} />\r\n      <br />\r\n      <label>UPC:</label>\r\n      <input type=\"text\" value={upc} onChange={(e) => setUpc(e.target.value)} />\r\n      <br />\r\n      <label>Available On (mm/dd/yyyy):</label>\r\n      <input type=\"text\" value={availableOn} onChange={(e) => setAvailableOn(e.target.value)} />\r\n      <br />\r\n      <h2>Properties</h2>\r\n      {properties.map((property, index) => (\r\n        <div key={index}>\r\n          <input\r\n            type=\"text\"\r\n            value={property.name}\r\n            onChange={(e) => handlePropertyChange(index, 'name', e.target.value)}\r\n            placeholder=\"Property Name\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={property.value}\r\n            onChange={(e) => handlePropertyChange(index, 'value', e.target.value)}\r\n            placeholder=\"Property Value\"\r\n          />\r\n        </div>\r\n      ))}\r\n      <button onClick={handleAddProperty}>Add Property</button>\r\n      <br />\r\n      <button onClick={handleSave}>Save</button>\r\n    </div>\r\n  );\r\n};\r\nexport default ProductCreatePage;\r\n*/\nvar _c;\n$RefreshReg$(_c, \"ProductCreatePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ProductCreatePage","_s","productName","setProductName","upc","setUpc","availableOn","setAvailableOn","properties","setProperties","name","value","handleAddProperty","handlePropertyChange","index","key","updatedProperties","handleSave","requestData","response","fetch","method","headers","body","JSON","stringify","ok","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","map","property","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ehurs/OneDrive/Documents/GitHub/product-management-tool/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css'; // Import CSS file for styling\r\n\r\nconst ProductCreatePage = () => {\r\n  const [productName, setProductName] = useState('');\r\n  const [upc, setUpc] = useState('');\r\n  const [availableOn, setAvailableOn] = useState('');\r\n  const [properties, setProperties] = useState([{ name: '', value: '' }]);\r\n\r\n  const handleAddProperty = () => {\r\n    setProperties([...properties, { name: '', value: '' }]);\r\n  };\r\n\r\n  const handlePropertyChange = (index, key, value) => {\r\n    const updatedProperties = [...properties];\r\n    updatedProperties[index][key] = value;\r\n    setProperties(updatedProperties);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    // Prepare data to be sent to the backend\r\n    const requestData = {\r\n      productName: productName,\r\n      upc: upc,\r\n      availableOn: availableOn,\r\n      properties: properties\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3001/insert-data', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(requestData)\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Data saved successfully');\r\n        // Optionally, you can reset the form fields here\r\n        setProductName('');\r\n        setUpc('');\r\n        setAvailableOn('');\r\n        setProperties([{ name: '', value: '' }]);\r\n      } else {\r\n        console.error('Failed to save data');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"product-create-container\">\r\n      <h1>Product Create Page</h1>\r\n      <label>Product Name:</label>\r\n      <input type=\"text\" value={productName} onChange={(e) => setProductName(e.target.value)} />\r\n      <br />\r\n      <label>UPC:</label>\r\n      <input type=\"text\" value={upc} onChange={(e) => setUpc(e.target.value)} />\r\n      <br />\r\n      <label>Available On (mm/dd/yyyy):</label>\r\n      <input type=\"text\" value={availableOn} onChange={(e) => setAvailableOn(e.target.value)} />\r\n      <br />\r\n      <h2>Properties</h2>\r\n      {properties.map((property, index) => (\r\n        <div key={index}>\r\n          <input\r\n            type=\"text\"\r\n            value={property.name}\r\n            onChange={(e) => handlePropertyChange(index, 'name', e.target.value)}\r\n            placeholder=\"Property Name\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={property.value}\r\n            onChange={(e) => handlePropertyChange(index, 'value', e.target.value)}\r\n            placeholder=\"Property Value\"\r\n          />\r\n        </div>\r\n      ))}\r\n      <button onClick={handleAddProperty}>Add Property</button>\r\n      <br />\r\n      <button onClick={handleSave}>Save</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCreatePage;\r\n\r\n\r\n\r\n/*import React, { useState } from 'react';\r\nimport './App.css'; // Import CSS file for styling\r\n\r\n\r\n\r\nconst ProductCreatePage = () => {\r\n  const [productName, setProductName] = useState('');\r\n  const [upc, setUpc] = useState('');\r\n  const [availableOn, setAvailableOn] = useState('');\r\n  const [properties, setProperties] = useState([{ name: '', value: '' }]);\r\n\r\n  const handleAddProperty = () => {\r\n    setProperties([...properties, { name: '', value: '' }]);\r\n  };\r\n\r\n  const handlePropertyChange = (index, key, value) => {\r\n    const updatedProperties = [...properties];\r\n    updatedProperties[index][key] = value;\r\n    setProperties(updatedProperties);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    // Implement save logic here, including validations\r\n    console.log('Product name:', productName);\r\n    console.log('UPC:', upc);\r\n    console.log('Available On:', availableOn);\r\n    console.log('Properties:', properties);\r\n  };\r\n\r\n  return (\r\n    <div className=\"product-create-container\">\r\n      <h1>Product Create Page</h1>\r\n      <label>Product Name:</label>\r\n      <input type=\"text\" value={productName} onChange={(e) => setProductName(e.target.value)} />\r\n      <br />\r\n      <label>UPC:</label>\r\n      <input type=\"text\" value={upc} onChange={(e) => setUpc(e.target.value)} />\r\n      <br />\r\n      <label>Available On (mm/dd/yyyy):</label>\r\n      <input type=\"text\" value={availableOn} onChange={(e) => setAvailableOn(e.target.value)} />\r\n      <br />\r\n      <h2>Properties</h2>\r\n      {properties.map((property, index) => (\r\n        <div key={index}>\r\n          <input\r\n            type=\"text\"\r\n            value={property.name}\r\n            onChange={(e) => handlePropertyChange(index, 'name', e.target.value)}\r\n            placeholder=\"Property Name\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={property.value}\r\n            onChange={(e) => handlePropertyChange(index, 'value', e.target.value)}\r\n            placeholder=\"Property Value\"\r\n          />\r\n        </div>\r\n      ))}\r\n      <button onClick={handleAddProperty}>Add Property</button>\r\n      <br />\r\n      <button onClick={handleSave}>Save</button>\r\n    </div>\r\n  );\r\n};\r\nexport default ProductCreatePage;\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}